%%
%% In this code, the obstacle moves from Ob_start = (x1, y1, z1) to Ob_end = (x2 y2, z2) for the 
%% duration of tot_time. The obstalce moves with constant velocity
%%

rosinit('10.2.131.164');
Ob_start = [2, 3, 2];	 %% start point of the obstalce
Ob_end = [6, -2, 13];    %% End location of the obstacle
tot_time = 15;		 %% Total time of flight

%% Calculating velocity of the obstacle in all the directions
vel_obs = (Ob_end - Ob_start)/tot_time;

%% Defining command message
pub_obs_vel = rospublisher('/gazebo/set_model_state', 'gazebo_msgs/ModelState');
obs_vel_msg = rosmessage(pub_vel);

%% Filling necessary entries in the message
obs_vel_msg.ModelName = 'unit_sphere_1';

%% Starting position of the Obstacle
obs_vel_msg.Pose.Position.X = Ob_start(1);
obs_vel_msg.Pose.Position.Y = Ob_start(2);
obs_vel_msg.Pose.Position.Z = Ob_start(3);

%% Defining velocity of the Obstacle
obs_vel_msg.Twist.Linear.X = vel_obs(1);
obs_vel_msg.Twist.Linear.Y = vel_obs(2);
obs_vel_msg.Twist.Linear.Z = vel_obs(3);

%% Publishing the command
send(pub_obs_vel,obs_vel_msg);

%% bring it to some visible original location
obs_vel_msg.ModelName = 'unit_sphere_1';
obs_vel_msg.Pose.Position.X = 2;
obs_vel_msg.Pose.Position.Y = 2;
obs_vel_msg.Pose.Position.Z = 2;
obs_vel_msg.Twist.Linear.X = 0;
obs_vel_msg.Twist.Linear.Y = 0;
obs_vel_msg.Twist.Linear.Z = 0;

%% Publishing the command
send(pub_obs_vel,obs_vel_msg);
